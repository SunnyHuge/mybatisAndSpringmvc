<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<context:component-scan base-package="com.zenin.mybatis" />
	<!-- 建立数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<!-- 基本属性 driverClassName、url、user、password -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/test?characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
		<!-- 配置连接池初始化大小、最小、最大 -->
		<property name="initialSize" value="2" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
	</bean>

	<!-- 把数据源注入给Session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.zenin.mybatis.entity" />
		<!-- 扫描所有mapper文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 单独配置一个Mapper，这种模式就是得给每个mapper接口配置一个bean -->
	<!-- <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean"> 
		<property name="sqlSessionFactory" ref="sqlSessionFactory" /> <property name="mapperInterface" 
		value="com.zenin.mybatis.dao.IUserDao" /> </bean> -->

	<!-- 通过扫描的模式映射所有的mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zenin.mybatis.dao" />
	</bean>

</beans>